name: Cleanup AWS Resources

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm resource deletion'
        required: true
        type: string
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  AWS_REGION: ap-southeast-2

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'DESTROY'
    environment:
      name: ${{ github.event.inputs.environment }}
      url: https://console.aws.amazon.com/
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Empty S3 buckets
        run: |
          echo "Emptying S3 buckets..."

          # Find weather buckets
          BUCKETS=$(aws s3 ls | grep weather-data-bucket | awk '{print $3}')

          for BUCKET in $BUCKETS; do
            echo "Emptying bucket: $BUCKET"
            aws s3 rm "s3://$BUCKET" --recursive || true

            # Remove all versions if versioning is enabled
            aws s3api list-object-versions --bucket "$BUCKET" \
              --query 'Versions[].{Key:Key,VersionId:VersionId}' \
              --output text | while read key version; do
                aws s3api delete-object --bucket "$BUCKET" --key "$key" --version-id "$version" || true
              done

            # Remove delete markers
            aws s3api list-object-versions --bucket "$BUCKET" \
              --query 'DeleteMarkers[].{Key:Key,VersionId:VersionId}' \
              --output text | while read key version; do
                aws s3api delete-object --bucket "$BUCKET" --key "$key" --version-id "$version" || true
              done
          done
      - name: Remove Secret Manager
        run: aws secretsmanager delete-secret --secret-id serverless-weather-notification-system-${{ env.ENVIRONMENT }}-api-key --force-delete-without-recovery

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init -backend-config="bucket=weather-notification-terraform-state-${{ env.ENVIRONMENT }}-bucket"

      - name: Terraform Plan Destroy
        working-directory: ./infrastructure
        run: |
          terraform plan -destroy -out=destroy-plan \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="weather_api_key=${{ secrets.WEATHER_API_KEY }}"
        env:
          TF_VAR_weather_api_key: ${{ secrets.WEATHER_API_KEY }}
          TF_VAR_environment: ${{ github.event.inputs.environment }}

      - name: Terraform Destroy
        working-directory: ./infrastructure
        run: terraform apply -auto-approve destroy-plan

      - name: Cleanup Summary
        run: |
          echo "### 🧹 Cleanup Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All AWS resources have been successfully destroyed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**⚠️ Important:** Make sure to:" >> $GITHUB_STEP_SUMMARY
          echo "- Check AWS Console to confirm all resources are deleted" >> $GITHUB_STEP_SUMMARY
          echo "- Verify no unexpected charges in your AWS billing" >> $GITHUB_STEP_SUMMARY
          echo "- Clean up any remaining CloudWatch logs if needed" >> $GITHUB_STEP_SUMMARY
